{
    "scope": "meta.embedded.statement.twig",
    "completions": [
        {
            "trigger": "apply",
            "contents": "apply",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Apply Twig filters on a block of template data.",
        },
        {
            "trigger": "autoescape",
            "contents": "autoescape",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Mark a section of a template to be escaped or not.",
        },
        {
            "trigger": "block",
            "contents": "block",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Used for inheritance and act as placeholders and replacements at the same time.",
        },
        {
            "trigger": "cache",
            "contents": "cache",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Cache a template fragment.",
        },
        {
            "trigger": "deprecated",
            "contents": "deprecated",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Generates a deprecation notice.",
        },
        {
            "trigger": "do",
            "contents": "do",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Works exactly like the regular variable expression, but doesn't print.",
        },
        {
            "trigger": "embed",
            "contents": "embed",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Combines the behavior of <code>include<code> and <code>extends</code>.",
        },
        {
            "trigger": "extends",
            "contents": "extends",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Can be used to extend a template from another one.",
        },
        {
            "trigger": "flush",
            "contents": "flush",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Flush the output buffer.",
        },
        {
            "trigger": "for",
            "contents": "for",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Loop over each item in a sequence.",
        },
        {
            "trigger": "if",
            "contents": "if",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Conditional statement in Twig.",
        },
        {
            "trigger": "else",
            "contents": "else",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Conditional statement in Twig.",
        },
        {
            "trigger": "import",
            "contents": "import",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "The import tag imports macro names in a local variable.",
        },
        {
            "trigger": "include",
            "contents": "include",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Includes a template and outputs the rendered content of that file.",
        },
        {
            "trigger": "macro",
            "contents": "macro",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Comparable with functions in regular programming languages.",
        },
        {
            "trigger": "sandbox",
            "contents": "sandbox",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Can be used to enable the sandboxing mode for an included template.",
        },
        {
            "trigger": "set",
            "contents": "set",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Assign values to variables.",
        },
        {
            "trigger": "use",
            "contents": "use",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Import the defined blocks into the current template.",
        },
        {
            "trigger": "verbatim",
            "contents": "verbatim",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Marks sections as being raw text that should not be parsed.",
        },
        {
            "trigger": "with",
            "contents": "with",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Creates a new inner scope.",
        },
        {
            "trigger": "endapply",
            "contents": "endapply",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Ending tag for <code>apply</code> tag.",
        },
        {
            "trigger": "endautoescape",
            "contents": "endautoescape",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Ending tag for <code>autoescape</code> tag.",
        },
        {
            "trigger": "endblock",
            "contents": "endblock",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Ending tag for <code>block</code> tag.",
        },
        {
            "trigger": "endcache",
            "contents": "endcache",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Ending tag for <code>cache</code> tag.",
        },
        {
            "trigger": "endembed",
            "contents": "endembed",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Ending tag for <code>embed</code> tag.",
        },
        {
            "trigger": "endfor",
            "contents": "endfor",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Ending tag for <code>for</code> tag.",
        },
        {
            "trigger": "endif",
            "contents": "endif",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Ending tag for <code>if</code> tag.",
        },
        {
            "trigger": "endmacro",
            "contents": "endmacro",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Ending tag for <code>macro</code> tag.",
        },
        {
            "trigger": "endsandbox",
            "contents": "endsandbox",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Ending tag for <code>sandbox</code> tag.",
        },
        {
            "trigger": "endverbatim",
            "contents": "endverbatim",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Ending tag for <code>verbatim</code> tag.",
        },
        {
            "trigger": "endwith",
            "contents": "endwith",
            "kind": ["markup", "t", "Twig Tag"],
            "annotation": "Twig Tag",
            "details": "Ending tag for <code>with</code> tag.",
        },
    ],
}
